knitr::opts_chunk$set(fig.show = 'asis')
library(tidyverse)
library(ggplot2)
library(ggalt)
setwd("/home/chosen/Desktop/Rice_GWAS_project/data/")
oxi_data <- read.csv("oxi_data.csv", header = TRUE)
oxi_data_long <- oxi_data %>%
pivot_longer("GOX":"ProtOx", names_to = "Oxidative_stress", values_to = "Value")
ggplot(oxi_data_long, aes(x = Value, fill = Treatment)) +
geom_density(alpha = 0.5) +
scale_fill_manual(values = c("#00AFBB", "#FC4E07")) +
facet_wrap(~ Oxidative_stress, scales = "free") +
labs(title = "Density plots of oxidative stress parameters by treatment groups",
x = "Value",
y = "Density") +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
box_color <- c("CON" = "#00AFBB", "DRO" = "#FC4E07")
ggplot(oxi_data_long, aes(x = Treatment, y = Value, fill = Treatment)) +
geom_boxplot() +
scale_fill_manual(values = box_color) +
facet_wrap(~ Oxidative_stress, scales = "free") +
labs(title = "Boxplot of Oxidative Stress Parameters by Treatment Groups",
x = "Treatment Group",
y = "Value") +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
# Select only numerical columns for PCA (excluding ID and Treatment columns)
oxi_data_pca <- oxi_data[,4:ncol(oxi_data)]
# Perform PCA
pca <- prcomp(oxi_data_pca, scale. = TRUE)
# Get the summary of PCA to extract explained variance
pca_summary <- summary(pca)
# Extracting the proportion of variance explained by PC1 and PC2
pc1_variance <- pca_summary$importance[2,1] * 100  # PC1 variance percentage
pc2_variance <- pca_summary$importance[2,2] * 100  # PC2 variance percentage
# Create a data frame for the plot
plot_data <- data.frame(Treatment = oxi_data$Treatment, PC1 = pca$x[,1], PC2 = pca$x[,2])
# Define colours for treatment
pca_color <- c("CON" = "#00AFBB", "DRO" = "#FC4E07")
# Plot
ggplot(plot_data, aes(x = PC1, y = PC2, color = Treatment, label = rownames(plot_data))) +
geom_point() +
geom_hline(yintercept = 0, lty = 2) +
geom_vline(xintercept = 0, lty = 2) +
stat_ellipse(type = "norm",      # Type of ellipse, "norm" assumes a normal-distribution
level = 0.95,    # Confidence level for the ellipse
aes(group = Treatment)) +
scale_color_manual(values = pca_color) +
ggtitle("PCA plot of oxidative stress data") +
xlab(paste("PC 1 - ", round(pc1_variance, 2), "% Variance")) +
ylab(paste("PC 2 - ", round(pc2_variance, 2), "% Variance")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid = element_blank(),
panel.border = element_rect(fill= "transparent"))
# Extract loading data
loadings <- pca$rotation[, 1:2]  # Get loading for the first two PCs
# Convert to data frame for plotting
loadings_df <- as.data.frame(loadings)
loadings_df$variable <- rownames(loadings)
# Plot
ggplot(loadings_df, aes(x = PC1, y = PC2, label = variable)) +
geom_text(vjust = 1, hjust = 1) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_minimal() +
ggtitle("PCA Loadings Plot") +
xlab(paste("PC 1 - ", round(pc1_variance, 2), "% Variance")) +
ylab(paste("PC 2 - ", round(pc2_variance, 2), "% Variance")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pca_loading <- autoplot(pca, data = oxi_data, colour = 'Treatment', loadings = TRUE,
loadings.label = TRUE, loadings.label.size = 3,
frame = TRUE, frame.type = 'norm', frame.alpha = 0)
